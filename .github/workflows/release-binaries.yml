name: Release Binaries

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  perform-release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 17

    - name: Setup Graalvm
      id: setup-graalvm
      uses: DeLaGuardo/setup-graalvm@master
      with:
        graalvm: '22.1.0'
        java: 'java11'
        arch: 'amd64'

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        cli: '1.11.1.1113'

    - name: Cache All The Things
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.clojure
          ~/.cpcache
        key: ${{ runner.os }}-${{ hashFiles('**/deps.edn') }}

    - name: Install native-image component
      run: |
        gu install native-image

    - name: Build native-image binary
      run: clojure -M:native-image

    - name: Compress binary
      run: |
        tar -czf target/sr.tar.gz target/sr
        zip target/sr.zip target/sr

    - name: Upload Release Tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}  
        asset_path: ./target/sr.tar.gz
        asset_name: sr.tar.gz
        asset_content_type: application/gzip

    - name: Upload Release Zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}  
        asset_path: ./target/sr.zip
        asset_name: sr.zip
        asset_content_type: application/zip
